name: Test install on popular packages
on:
  push:
    branches:
      - master

jobs:
  fetch-packages:
    name: Fetch packages to test
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.packages }}
    steps:
      - name: Fetch package list
        id: set-matrix
        run: |
          curl -s "https://packagist.org/explore/popular.json?per_page=100" | jq -r '.packages[].name' > popular.txt
          curl -s "https://packagist.org/packages/list.json?vendor=rikudou" | jq -r '.packageNames[]' > rikudou.txt
          curl -s "https://packagist.org/packages/list.json?vendor=unleash" | jq -r '.packageNames[]' > unleash.txt
          
          cat popular.txt rikudou.txt unleash.txt | sort -u | jq -R -s -c 'split("\n")[:-1]' > packages.json
          echo "packages=$(cat packages.json)" >> $GITHUB_OUTPUT
          cat packages.json

  test-install:
    name: Test installation
    needs: fetch-packages
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        package: ${{ fromJson(needs.fetch-packages.outputs.matrix) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          tools: composer
      - name: Create temporary project
        run: |
          echo "{}" > composer.json
          composer config --no-plugins allow-plugins.rikudou/source-generators true
          
          set +e
          output=$(composer require ${{ matrix.package }} rikudou/source-generators:dev-master --no-interaction --no-progress 2>&1)
          exit_code=$?
          set -e
          
          if echo "$output" | grep -q "has requirements incompatible with your PHP version"; then
            echo "::notice title=Skipping::${{ matrix.package }} due to incompatible PHP version."
            exit 0
          fi
          if echo "$output" | grep -q "matching your minimum-stability (stable)"; then
            echo "::notice title=Skipping ${{ matrix.package }} because it has no stable version."
            exit 0
          fi
          
          echo "$output"
          if [ $exit_code -ne 0 ]; then
            exit $exit_code
          fi
      - name: Run source generators
        run: vendor/bin/source-generators
